ADICIONEM OS POSSIVEIS BACKLOGS QUE VCS JULGAREM NECESSARIOS

// vamos modelar os backlogs pra facilitar
// talvez manter um arquivo atualizado aqui, com o historico de coisas feitas, facilitaria na hora de gerar os logs de entregas

INFO: Todo codigo de validação e/ou de tratamento de string, formatação e etc, vai em um pacote util.
INFO: Se for validação, mas vir de um lib, vai pro util tbm, mas vai como adapter, assim mantemos controle do metodo

INFO: Toda classe Bean deve extender o Connection, ela não sobrescreve o super, mas faz um adapter com o mesmo nome chamando o super;
INFO: Classes com joins, ou buscas no database nas quais não existem uma tabela propria, é necessario criar uma classe (fake table) e sobrescrever os metodos do Connection
// qualquer coisa a gente conversa isso pessoalmente

** 1 finalizar o mecanismo de persistencia,modelar o Result da select para o bean. 
Ex: $a = new Aluno;
Ex: $a->setId(10);
Ex: $a->toSelect()
falta modelar um metodo para povoar o objeto aluno automaticamente


** 2 Criar o update no mecanismo de persistencia

** 3 Criar projeto angular
    // adicionar as dependencias no .gitgnore pq senão o projeto vai dar 300MB

** 4 Instalar o framework PrimeNG
    // adicionar as dependencias no .gitgnore pq senão o projeto vai dar 100MB

** 5 Modelar as regras de negocio

** 6 Modelar o banco de dados

** 7 Criar as classes beans necessarias

** 8 Ver a possibilidade de criar anotações no php, pra facilitar o trampo 

// lembrando que backlogs que são ligados, é bom que a msm pessoa faça